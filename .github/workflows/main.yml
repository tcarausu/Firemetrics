name: CI (build + ephemeral run)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Clean + build (runs tests)
        run: |
          chmod +x gradlew
          ./gradlew clean build --no-daemon

  compose-smoke:
    needs: build-test
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4

      # build & run your stack on the runner using your docker-compose.yml
      - name: Start stack (detached)
        run: docker compose -f docker-compose.yml up -d --build

      - name: Health check
        run: |
          for i in {1..30}; do
            if curl -fsS http://localhost:8081/actuator/health | grep -q '"status":"UP"'; then
              echo "App is UP"; exit 0
            fi
            echo "Waiting for app... ($i)"; sleep 5
          done
          echo "App did not become healthy"; docker compose logs; exit 1

      - name: Collect logs
        if: always()
        run: |
          mkdir -p logs
          docker compose logs > logs/compose.log || true

      - name: Upload logs artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: compose-logs
          path: logs

      - name: Tear down
        if: always()
        run: docker compose -f docker-compose.yml down -v --remove-orphans
